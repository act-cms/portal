[
  {
    "title": "Bridging Basic Chemistry and Cheminformatics: A Jupyter-based Module on Molecular Representation for Introductory Chemistry",
    "description": "Students will learn how molecules are represented computationally and apply programming concepts to analyze and visualize molecular structures using Jupyter notebooks. The lesson builds foundational skills in cheminformatics and computational thinking for molecular science.",
    "expanded_description": "This lesson introduces students to the fundamental ways molecules are represented in computational chemistry and cheminformatics, with a focus on practical skills using Jupyter notebooks. Students will explore how chemical structures are encoded as data (e.g., SMILES, InChI, and molecular graphs), and learn to manipulate and visualize these representations using Python.\n\nDesigned for introductory chemistry students with beginner programming experience, the module bridges core chemical concepts with modern computational tools. Through hands-on activities, students will gain experience reading, interpreting, and generating molecular representations, and will use open-source libraries to analyze and visualize molecular structures.\n\nBy the end of the lesson, students will understand the importance of molecular representations in computational science, be able to apply basic programming to chemical problems, and develop foundational skills for further study in cheminformatics and molecular modeling. This lesson supports the integration of computational thinking into general chemistry curricula and prepares students for more advanced topics in molecular science.\n",
    "programming_skill": "Beginner",
    "primary_course": "General Chemistry",
    "authors": [
      "Prof. Kevin P. Greenman"
    ],
    "estimated_time": "2-3 hours",
    "format": "Multi-Part Materials Module",
    "instructor_email": "kgreenman@catholic.tech",
    "student_level": "Undergraduate - First/Second Year",
    "students_piloted": 15,
    "instructor_notes": "Additional context for instructors using this lesson:\n\n- These materials are under development and will be first piloted in a course in Fall 2025.  \n",
    "public_repo_url": "https://github.com/act-cms/molecular-representations",
    "materials": [
      {
        "title": "Chemistry Visualization",
        "description": "Visualize chemical structures in 2D and 3D using Python tools. Learn to represent molecules graphically and understand the basics of cheminformatics visualization.",
        "type": "notebook",
        "duration": "20 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/1-chemistry_visualisation.ipynb",
        "objectives": [
          "Understand how to visualize molecules in 2D and 3D.",
          "Use Python libraries to display and manipulate chemical structures."
        ]
      },
      {
        "title": "Conformers: Exploring Molecular Flexibility",
        "description": "Explore the concept of molecular conformers and how different conformations affect molecular properties. Generate and analyze conformers computationally.",
        "type": "notebook",
        "duration": "20 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/2-conformers.ipynb",
        "objectives": [
          "Define and generate molecular conformers.",
          "Analyze the impact of conformational changes on molecular properties."
        ]
      },
      {
        "title": "Digital Chemistry Representations",
        "description": "Learn about digital representations of molecules, including SMILES and InChI. Practice converting between different formats and understand their computational uses.",
        "type": "notebook",
        "duration": "20 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/3-digital_chemistry_representations.ipynb",
        "objectives": [
          "Describe common digital representations for molecules.",
          "Convert between SMILES, InChI, and other formats."
        ]
      },
      {
        "title": "Hybridisation in Chemistry",
        "description": "Investigate the concept of hybridisation and how it explains molecular geometry and bonding. Use computational tools to assign hybridisation states.",
        "type": "notebook",
        "duration": "20 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/4-hybridisation.ipynb",
        "objectives": [
          "Explain the concept of atomic hybridisation.",
          "Assign hybridisation states to atoms in molecules."
        ]
      },
      {
        "title": "VSEPR and Molecular Geometry",
        "description": "Apply Valence Shell Electron Pair Repulsion (VSEPR) theory to predict and visualize molecular shapes.",
        "type": "notebook",
        "duration": "20 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/5-vsepr_geometry.ipynb",
        "objectives": [
          "Predict molecular geometry using VSEPR theory.",
          "Visualize 3D molecular shapes and relate them to electron pair arrangements."
        ]
      },
      {
        "title": "Bond Types and Chemical Structure",
        "description": "Differentiate between ionic, covalent, and other bond types. Explore how bond types influence molecular properties and representations.",
        "type": "notebook",
        "duration": "20 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/6-bond_types.ipynb",
        "objectives": [
          "Identify and compare different types of chemical bonds.",
          "Relate bond types to molecular structure and reactivity."
        ]
      },
      {
        "title": "Working with Chemistry Data",
        "description": "Read, clean, and visualize chemical datasets using Python. Learn to handle SMILES strings and property data for cheminformatics analysis.",
        "type": "notebook",
        "duration": "20 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/7-chemistry_data.ipynb",
        "objectives": [
          "Import and manipulate chemical data in Python.",
          "Visualize and analyze chemical datasets."
        ]
      },
      {
        "title": "Introduction to Chemprop and Machine Learning",
        "description": "Train a basic Chemprop machine learning model on chemical data. Visualize regression results and understand the basics of molecular property prediction.",
        "type": "notebook",
        "duration": "30 min",
        "github_url": "https://github.com/act-cms/molecular-representations/blob/main/8-chemprop_machine_learning.ipynb",
        "objectives": [
          "Train a simple machine learning model for molecular property prediction.",
          "Interpret and visualize model results using Python tools."
        ]
      }
    ],
    "scientific_objectives": [
      "Predict the molecular geometry of simple molecules using Valence Shell Electron Pair Repulsion (VSEPR) theory",
      "Describe the concept of hybridization and determine the hybridization state of the central atom in molecules, correctly identifying sp, sp², sp³, sp³d, and sp³d² hybridizations",
      "Identify and differentiate between ionic and covalent bonds based on electronegativity differences and electron transfer/sharing mechanisms",
      "Translate between different representations of chemical structures (e.g., Lewis structures, SMILES, 3D models)",
      "Select and justify the most suitable chemical representation for a specific scientific or computational task"
    ],
    "cyberinfrastructure_objectives": [
      "Read and write chemical data in the form of SMILES strings and property values from CSV files using Pandas in Python",
      "Clean and visualize chemical datasets using Pandas, RDKit, and other Python libraries/operations",
      "Use GPU computing resources to train a basic Chemprop and other machine learning models",
      "Visualize results of machine learning regression using Matplotlib and Seaborn"
    ],
    "scientific_prerequisites": [
      "High school level mathematics",
      "Basic understanding of scientific concepts"
    ],
    "programming_prerequisites": [
      "Basic Python syntax (variables, loops, functions)"
    ],
    "platforms": [
      "Local Installation"
    ],
    "recommended_platform": "Local Installation",
    "tags": [
      "python",
      "machine-learning",
      "visualization"
    ],
    "id": "molecular-representations",
    "instructor_repo": "act-cms/instructor-materials",
    "instructor_repo_path": "molecular-representations"
  },
  {
    "title": "Introduction to Programming for Molecular Scientists",
    "description": "Learn fundamental programming concepts in Python including data types, file operations, and basic programming structures.",
    "expanded_description": "This foundational module introduces students to programming concepts essential for computational molecular science. \nStudents will learn Python basics including variables, data types, control structures, and file operations through \nhands-on exercises designed for scientific applications.\n\nThe module emphasizes practical programming skills that serve as prerequisites for more advanced computational \nlessons in chemistry and molecular sciences.\n",
    "programming_skill": "None",
    "primary_course": "Foundational Module",
    "also_for": [
      "Physical Chemistry",
      "Materials Science"
    ],
    "authors": [
      "Dr. Jessica A. Nash",
      "Prof. Ashley McDonald"
    ],
    "estimated_time": "2-3 hours",
    "format": "Multi-Part Materials Module",
    "instructor_email": "instructor-access@university.edu",
    "instructor_notes": "This introductory module works well as the first programming lesson for students with no coding experience.\n\nTeaching tips:\n- Students often need extra time with the file reading concepts in Part 2\n- Encourage students to experiment with the code examples\n- Common issue: students forget to run cells in order\n",
    "public_repo_url": "https://github.com/act-cms/foundational-intro-python",
    "materials": [
      {
        "title": "Introduction to Python",
        "description": "Introduction to Python programming language, basic data types, and operations.",
        "type": "notebook",
        "duration": "1 hour",
        "github_url": "https://github.com/act-cms/foundational-intro-python/blob/main/01-introduction-to-python.ipynb",
        "colab_url": "https://colab.research.google.com/github/act-cms/foundational-intro-python/blob/main/colab_notebooks/01-introduction-to-python.ipynb",
        "objectives": [
          "Understand basic Python syntax and data types",
          "Learn about setting variables, for loops, and conditionals",
          "Write simple scripts in Jupyter notebooks to perform calculations"
        ]
      },
      {
        "title": "Reading Data from a File",
        "description": "Opening files using open, reading line by line, and searching for a pattern in the file.",
        "type": "notebook",
        "duration": "1 hour",
        "github_url": "https://github.com/act-cms/foundational-modules/blob/main/intro-programming/reading_from_file.ipynb",
        "colab_url": "https://colab.research.google.com/github/act-cms/foundational-modules/blob/main/intro-programming/colab-notebooks/student/reading_from_file.ipynb",
        "objectives": [
          "Open a file and read its contents line by line",
          "Search for specific patterns in text files",
          "Extract relevant data from files"
        ]
      }
    ],
    "scientific_objectives": [
      "Apply programming concepts to solve basic scientific problems",
      "Connect programming fundamentals to molecular science applications"
    ],
    "cyberinfrastructure_objectives": [
      "Execute Python code in Jupyter notebook environments",
      "Understand basic programming concepts: variables, loops, conditionals",
      "Read and process data from files",
      "Debug simple programming errors",
      "Develop computational thinking skills for scientific problem-solving"
    ],
    "scientific_prerequisites": [
      "High school level mathematics",
      "Basic understanding of scientific concepts"
    ],
    "programming_prerequisites": [
      "No prior programming experience required"
    ],
    "platforms": [
      "Google Colab",
      "ChemCompute",
      "Local Installation"
    ],
    "recommended_platform": "Google Colab",
    "tags": [
      "introduction",
      "python",
      "jupyter",
      "foundational"
    ],
    "id": "foundational-intro-python",
    "instructor_repo": "act-cms/instructor-materials",
    "instructor_repo_path": "foundational-intro-python"
  }
]