# lessons/your-lesson-name.yml
# 
# STARTER TEMPLATE FOR ACT-CMS LESSON PORTAL SUBMISSION
# Replace all placeholder text with your actual lesson information
# Remove any sections that don't apply to your lesson

# BASIC METADATA (REQUIRED)
# Use a clear, descriptive title that includes the main topic
title: "Diffusion from the Atomistic to Continuum Scale"

# Brief description for search results (1-2 sentences)
description: "Explore ways to measure and model diffusion computationally, starting with molecular dynamics in a web app and then moving to a Fickian continuum description."

# Longer description for the lesson page (use | for multi-line text)
expanded_description: |
  Explore diffusion at multiple lengthscales, no coding experience required! 
  Students will start by collecting their "experimental" data using a 2D molecular dynamics (MD) web app and 
  by stepping through this notebook, will see how one can extract a diffusivity from mean squared displacement
  across particles. 

  Next, they will connect this to the continuum (Fick's Laws) description and investigate how the intuitive notion
  of diffusion (how material "spreads out") connects to the atomistic picture from Brownian motion.

  Along the way, there are prompts to reflect on both the conceptual content as well as the complementarity between
  the experimental and computational paradigms.

# COURSE INFORMATION (REQUIRED)
# Choose ONE: "None", "Beginner", "Intermediate", "Advanced"
programming_skill: "None"
# None: No programming experience. 
# Beginner: Knows variables, conditionals, loops
# Intermediate: Can write their own scripts from scratch
# Advanced: Can write/develop software.

# Examples: "Foundational Module", "Physical Chemistry", "Organic Chemistry", 
# "Inorganic Chemistry", "Analytical Chemistry", "Biochemistry", "Materials Science", "Other"
primary_course: "Materials Science"

# List other courses where this lesson could be used (optional)
also_for:
  - "Physical Chemistry"

# List all authors
authors: 
  - "Prof. Rachel C. Kurchin"

# Estimated total time for all materials
estimated_time: "2-3 hours"

# Write a description of your module.
# Single notebook, multi-part module, etc?
format: "Single notebook"

# INSTRUCTOR INFORMATION (OPTIONAL)
# Contact email for instructor access requests (optional - will use default if not specified)
instructor_email: "rkurchin@cmu.edu"
# Note: Instructor materials will be located at: instructor-repo/{lesson-filename}/
# where {lesson-filename} matches this YAML file's name

# INSTRUCTOR DETAILS (OPTIONAL)
# What level of students was this piloted with?
student_level: "Undergraduate - First Year"  # e.g., "Graduate", "Undergraduate - First Year", "Mixed Graduate/Undergraduate"
# How many students has this been tested with?
students_piloted: 30  # Number of students
# Free-form notes for instructors
instructor_notes: |
  Additional context for instructors using this lesson:

  This activity is designed as a lab activity to expose students to some techniques and capabilities of
  computational materials science with no programming prerequisites. That is, all they have to do with this
  Jupyter notebook is run existing cells of code and in some cases paste in data or change one number. My goals
  were to get the students thinking about how computation as a paradigm is distinct from pure theory and can 
  complement both theory and experiment, e.g. by probing scales of length and time inaccessible in a physical
  lab, or through massive replication through automation.
  
  When I piloted this activity (in Carnegie Mellon's introductory materials science course), it was 
  actually before they had seen anything about diffusion in the associated lecture. I think it could work well
  in either scenario, though, it would just affect how technical one should expect the students to get in their
  responses to the reflection prompts, and also what context would be needed in the prelab mini-lecture. My pilot
  audience was also extremely heterogeneous in programming background, some first-year undergraduates with 
  essentially no experience, and some more senior computer science students, and it worked just fine.

  For my course, the deliverable was a standard lab memo that included responses to the reflection prompts within
  the notebook, as well as this additional prompt: "Please also write at least a few sentences reflecting on 
  computation as an "experimental" paradigm generally. How do you see it as similar to or different from 
  experiments? What can we learn about diffusion more easily from one approach compared to the other?"
  
  Logistical tips, and things to emphasize in prelab mini-lecture:
  - Demonstrate launching the notebook in chosen platform (I suggest ChemCompute), including setting the correct runtime!
  - Demonstrate using the online MD tool and getting the density up high enough (easiest technique is to use the "freeze" button and then drag the number slider up repeatedly)
  - Since the first two setup cells to install and import packages will take a few minutes to run, try to make sure students get those going first and then start reading and exploring the MD engine, etc.

  Some student "gotchas" I ran into a few times:
  - Not setting the correct runtime (e.g. they're in Python instead of Julia) so none of the code runs
  - Not evaluating the cells after pasting their data in
  - Data formatting issues due to either not pasting in the full contents of the data dump, resetting stats during data collection, etc.

  Possibilities to "level up" this activity for more advanced students:
  - Connect to 2D Lennard-Jones phase diagram (conditions here are in the two-phase solid-liquid region!) and thinking about why solid ends up in middle of box and liquid along the edges (see e.g. https://www.researchgate.net/publication/49750821/figure/fig1/AS:667216336936969@1536088179352/Phase-diagram-of-2D-Lennard-Jones-solid-as-given-in-9-The-first-order-boundaries-are.png) 
  - "Skeletonize" some of the code cells and ask students to fill in some of the analysis or visualization themselves
  - Get more in-depth into what's going on with the MD, understand why temperature drifts, etc.
  - Have them repeat the second portion at another temperature and think about how/why the results change
  - Dive more into some of the PDE stuff at the end

# Related lessons that complement this one
related_modules:


# REPOSITORY URLS (REQUIRED)
# Link to the repository containing your public material
public_repo_url: "https://github.com/rkurchin/27100_diffusion_computational_lab"

# MATERIALS SECTION (REQUIRED)
# List each notebook/material in logical order
materials:
  - title: "Diffusion Computational Lab"
    description: "Explore diffusion computationally at atomistic and continuum lengthscales."
    type: "notebook"  # Usually "notebook", could be "slides", "dataset", etc.
    duration: "2-3 hours"
    
    # REQUIRED: Include at least one URL (preferably both)
    # Direct link to notebook file on GitHub
    github_url: "https://github.com/rkurchin/27100_diffusion_computational_lab/blob/main/diffusion_computational_lab.ipynb"
    # Google Colab launch link (recommended for accessibility)
    colab_url: "https://colab.research.google.com/github/rkurchin/27100_diffusion_computational_lab/blob/main/colab/diffusion_computational_lab_colab.ipynb"
    
    # Learning objectives specific to this material
    objectives:
      - "Understand how we measure and model diffusion computationally at both atomistic and continuum scales"
      - "Consider complementarity between computational and experimental paradigms"
  
  # Add more materials as needed

# LEARNING OBJECTIVES (REQUIRED)
# What molecular science concepts will students learn?
scientific_objectives:
  - "Observe diffusive processes in an atomistic simulation"
  - "Explain how we can compute a diffusivity from the slope of MSD vs. time"
  - "Connect these atomistic mechanisms to the continuum (Fickian) description"

# What computational/programming skills will students develop?
cyberinfrastructure_objectives:
  - "Handle tabular data"
  - "Interact with a literate programming environment (Jupyter)"
  - "Interpret parameters from a model fit"
  - "Consider complementarity between computational and experimental paradigms"

# PREREQUISITES (REQUIRED)
# What science background do students need?
scientific_prerequisites:
  - "High school chemistry/physics"
  - "High school algebra/precalc"

# What programming experience is assumed?
programming_prerequisites:
  - "No prior programming experience required"
  # OR: eg "Basic Python syntax (variables, loops, functions)"

# PLATFORM SUPPORT (REQUIRED)
# List platforms where your materials can be used.
platforms:
  - "ChemCompute"
  - "Google Colab"
  - "Local Installation"

# Which platform do you recommend for most users?
recommended_platform: "ChemCompute"

# METADATA (REQUIRED)
# Tags help with searching - use relevant keywords
tags:
  - "julia"
  - "molecular-dynamics"
  - "visualization"
  - "diffusion"
  - "materials-science"