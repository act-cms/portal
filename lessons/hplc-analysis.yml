# lessons/hplc-analysis.yml
# 
# STARTER TEMPLATE FOR ACT-CMS LESSON PORTAL SUBMISSION
# Replace all placeholder text with your actual lesson information
# Remove any sections that don't apply to your lesson

# BASIC METADATA (REQUIRED)
# Use a clear, descriptive title that includes the main topic
title: "High-Performance Liquid Chromatography Analysis"

# Brief description for search results (1-2 sentences)
description: "Data analysis for a High-Performance Liquid Chromatography Experiment in Analytical Chemistry Laboratory."

# Longer description for the lesson page (use | for multi-line text)
expanded_description: |
  This lesson can be used to analyze chromatographic retention time and peak area data collected by students in an analytical chemistry laboratory.
  The suggested context would be to walk through it together in the analytical laboratory after data collection, likely in the second week of a 2-week sequence.
  Even with relatively short run times and an autosampler, it is not feasible to prepare samples, run the HPLC, and analyze HPLC data in one lab period. 
  Alternatively, the HPLC Simulator on Chem Compute could be used to generate data and this lesson could be used to analyze data within one lab period.
  (Perri, M. J. 'Online Data Generation in Quantitative Analysis: Excel Spreadsheets and an Online HPLC Simulator Using a Jupyter Notebook on the Chem Compute Web site',
  *J. Chem. Educ.* **2020**, *97*, 2950â€“2954).  At least an hour at the end of the lab period should be allocated to this data analysis module.


# COURSE INFORMATION (REQUIRED)
# Choose ONE: "None", "Beginner", "Intermediate", "Advanced"
programming_skill: "None"
# None: No programming experience. 
# Beginner: Knows variables, conditionals, loops
# Intermediate: Can write their own scripts from scratch
# Advanced: Can write/develop software.

# Examples: "Foundational Module", "Physical Chemistry", "Organic Chemistry", 
# "Inorganic Chemistry", "Analytical Chemistry", "Biochemistry", "Materials Science", "Other"
primary_course: "Analytical Chemistry"

# List other courses where this lesson could be used (optional)
also_for:
  - "Biochemistry"
  - "Environmental Chemistry"

# List all authors
authors: 
  - "Dr. Christine Morales"

# Estimated total time for all materials
estimated_time: "1-2 hours"

# Write a description of your module.
# Single notebook, multi-part module, etc?
format: "Single notebook"

# INSTRUCTOR INFORMATION (OPTIONAL)
# Contact email for instructor access requests (optional - will use default if not specified)
instructor_email: "moralech@mountunion.edu"
# Note: Instructor materials will be located at: instructor-repo/{lesson-filename}/
# where {lesson-filename} matches this YAML file's name

# INSTRUCTOR DETAILS (OPTIONAL)
# What level of students was this piloted with?
student_level: "Undergraduate - Second Year"  # e.g., "Graduate", "Undergraduate - First Year", "Mixed Graduate/Undergraduate"
# How many students has this been tested with?
students_piloted: 10  # Number of students
# Free-form notes for instructors
instructor_notes: |
  This module provides practice to reinforce programming skills introduced in prior modules for students with no prior coding experience.

  Teaching tips:
  - If time permits, consider reviewing the concepts of retention time and peak area to assist students with interpreting data from chromatograms.
  - Data organization in Task 1 is potentially challenging, hence the pre-existing, blank NumPy arrays in the sample code.
  - The linear regression and calibration curves in Task 2 should be fairly straightforward, except for the space-saving choice of making a three-part graph.  
    If time permits, consider asking students to modify code from a prior module to generate calibration curves for each analyte.
  - Task 3 is intended to reinforce the *concepts* of retention time and spiking, but does *not* use the standard addition method to estimate concentration.  
  - Task 4 contains code that is analogous to that of Task 4 of the Solution Preparation Spectrophotometry module.  If time permits,
    consider asking students to (substantially) modify that code to implement it in triplicate, in the new context of HPLC peak area analysis.
    Note that a dilution factor and a unit conversion also are required here, which were not present in the prior module.  Consider providing the sample-code 
    to at least perform the dilution and unit conversion and print out results.
  
  Timing notes:
  - Task 1 typically takes students 15-20 minutes, mainly due to the volume and complexity of data entry required.  
  - Task 2 typically takes students 5-10 minutes with sample code.  Add 15-20 minutes if asking students to copy/paste/modify code from
    a prior module to construct three linear regression models and three calibration curves with error bars.
  - Task 3 typically takes students 10-15 minutes.
  - Task 4 typically takes students 10-15 minutes with sample code.  Add 30-45 minutes if asking students to (substantially) modify code  
    from a prior module to calculate three analyte concentrations and propagated uncertainties.  
  
  Common student questions:
  - There is a lot going on in Task 1; students may get confused about data entry even with all sample-code provided.
  - Students may be confused about the purpose of Task 3, possibly because the standard addition method is *not* used here to estimate concentration.
  - Students may ask why calibration curves are used here instead of standard additions to calculate accurate concentrations.

# Related lessons that complement this one
related_modules:
  - "moralech-umu-basic-tasks"
  - "statistical-testing-beta" 
  - "solution-preparation-spectrophotometry"
  - "standard-addition-spectrophotometry"
  - "calibration-of-glassware"
  - "ocean-acidification"
  - "buffer-solutions"
  - "gc-ms-internal-standard"

# REPOSITORY URLS (REQUIRED)
# Link to the repository containing your public material
public_repo_url: "https://github.com/act-cms/hplc-analysis"

# MATERIALS SECTION (REQUIRED)
# List each notebook/material in logical order
materials:
  - title: "High-Performance Liquid Chromatography Analysis"
    description: "Generate code in Python to perform four tasks: Input concentration, volume, retention time and peak area data; Apply 
    linear-least-squares analysis to generate calibration curves; Identify chromatogram peaks using data from spiked samples; 
    Use calibration curves, peak area data and solution stoichiometry to calculate analyte concentrations and propagated uncertainty."
    type: "notebook"  # Usually "notebook", could be "slides", "dataset", etc.
    duration: "1-2 hours"
    
    # REQUIRED: Include at least one URL (preferably both)
    # Direct link to notebook file on GitHub
    github_url: "https://github.com/act-cms/hplc-analysis/blob/main/HPLC_Analysis_Student_Version.ipynb"
    # Google Colab launch link (recommended for accessibility)
    colab_url: "https://colab.research.google.com/github/act-cms/hplc-analysis/blob/main/HPLC_Analysis_Student_Version.ipynb"
    
    # Learning objectives specific to this material
    objectives:
      - "Content: Explain how using high-performance liquid chromatography (HPLC) permits separation of a mixture into more than one analyte, using retention times to identify well-separated peaks for each analyte"
      - "Content: Explain how spiked samples permit verification of each analyte's identity and estimation of each analyte's concentration"
      - "Content: Explain how calibration curves permit quantitative analysis of each analyte"
      - "Process: Use Python code to transform data using structures such as arrays"
      - "Process: Use Python code to visualize data using different types of graphs"
      - "Process: Use Python code to transform data using functions"

# LEARNING OBJECTIVES (REQUIRED)
# What molecular science concepts will students learn?
scientific_objectives:
  - "Explain how using high-performance liquid chromatography (HPLC) permits separation of a mixture into more than one analyte, using retention times to identify well-separated peaks for each analytes"
  - "Explain how spiked samples permit verification of each analyte's identity and estimation of each analyte's concentration"
  - "Explain how calibration curves permit quantitative analysis of each analyte"

# What computational/programming skills will students develop?
cyberinfrastructure_objectives:
  - "Use Python code to transform data using structures such as arrays"
  - "Use Python code to visualize data using different types of graphs"
  - "Use Python code to transform data using functions"

# PREREQUISITES (REQUIRED)
# What science background do students need?
scientific_prerequisites:
  - "General chemistry"
  - "Basic understanding of chromatographic separations"

# What programming experience is assumed?
programming_prerequisites:
  - "No prior programming experience required"
  # OR: eg "Basic Python syntax (variables, loops, functions)"

# PLATFORM SUPPORT (REQUIRED)
# List platforms where your materials can be used.
platforms:
  - "Google Colab"
  - "Local Installation"
  - "ChemCompute"

# Which platform do you recommend for most users?
recommended_platform: "Google Colab"

# METADATA (REQUIRED)
# Tags help with searching - use relevant keywords
tags:
  - "python"
  - "analytical-chemistry"
  - "laboratory"
  - "data-analysis"   # Use appropriate scientific area tags
