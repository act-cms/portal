# lessons/your-lesson-name.yml
# 
# STARTER TEMPLATE FOR ACT-CMS LESSON PORTAL SUBMISSION
# Replace all placeholder text with your actual lesson information
# Remove any sections that don't apply to your lesson

# BASIC METADATA (REQUIRED)
# Use a clear, descriptive title that includes the main topic
title: "Introduction to the linear variation method"

# Brief description for search results (1-2 sentences)
description: "In this lesson students implement the linear variation method to calculate approximate solutions to the time-independent Schrodinger equation."

# Longer description for the lesson page (use | for multi-line text)
expanded_description: |
In this lesson, students will be introduced to the linear variation method for computing aaproximate solution to the Schrodinger equation. Students will implement the method to solve    

# COURSE INFORMATION (REQUIRED)
# Choose ONE: "None", "Beginner", "Intermediate", "Advanced"
programming_skill: "Intermediate"
# None: No programming experience. 
# Beginner: Knows variables, conditionals, loops
# Intermediate: Can write their own scripts from scratch
# Advanced: Can write/develop software.

# Examples: "Foundational Module", "Physical Chemistry", "Organic Chemistry", 
# "Inorganic Chemistry", "Analytical Chemistry", "Biochemistry", "Materials Science", "Other"
primary_course: "Physical Chemistry"

# List other courses where this lesson could be used (optional)
also_for:
  - "Physical Chemistry"

# List all authors
authors: 
  - "Prof. Gergely Gidofalvi"

# Estimated total time for all materials
estimated_time: "3 or 6 hours (depending on implementation)"

# Write a description of your module.
# Single notebook, multi-part module, etc?
format: "Single notebook"

# INSTRUCTOR INFORMATION (OPTIONAL)
# Contact email for instructor access requests (optional - will use default if not specified)
instructor_email: "gidofalvi@gonzaga.edu"
# Note: Instructor materials will be located at: instructor-repo/{lesson-filename}/
# where {lesson-filename} matches this YAML file's name

# INSTRUCTOR DETAILS (OPTIONAL)
# What level of students was this piloted with?
student_level: "Undergraduate - Third Year"  # e.g., "Graduate", "Undergraduate - First Year", "Mixed Graduate/Undergraduate"
# How many students has this been tested with?
students_piloted: 20  # Number of students
# Free-form notes for instructors
instructor_notes: |
  Additional context for instructors using this lesson:
  
  - text
  
  Timing notes:
  - At the beginning of the lesson, the instructor is encouraged to spend review the key steps of applying the method (section 3 of notebook)  
  - A three hour live coding session should provide enough time for the instructor to demonstrate 1) the application of the method, 2) use of SciPy functions for numerical integration and linear algebra, and 3) code design and debugging. A useful example could be a particle confined to an infinite well with a raised floor in the right half of the box. Approximately 2.5 hours for this would be appropriate. 
  - Students are then asked to write their own code to obtain approximate solutions for a modified infinite well potential with a bump in the middle of the well. This can be assigned as a homework or students can work on this in the lab. 
  
  Common student questions:

# Related lessons that complement this one
related_modules:
  - "thermodynamics-fundamentals"
  - "statistical-mechanics-intro" 
  - "computational-chemistry-basics"

# REPOSITORY URLS (REQUIRED)
# Link to the repository containing your public material
public_repo_url: "https://github.com/act-cms/your-lesson-repo"

# MATERIALS SECTION (REQUIRED)
# List each notebook/material in logical order
materials:
  - title: "Part 1: Introduction"
    description: "Brief description of what this notebook covers"
    type: "notebook"  # Usually "notebook", could be "slides", "dataset", etc.
    duration: "1 hour"
    
    # REQUIRED: Include at least one URL (preferably both)
    # Direct link to notebook file on GitHub
    github_url: "https://github.com/act-cms/your-lesson-repo/blob/main/01-intro.ipynb"
    # Google Colab launch link (recommended for accessibility)
    colab_url: "https://colab.research.google.com/github/act-cms/your-lesson-repo/blob/main/colab-notebooks/01-intro.ipynb"
    
    # Learning objectives specific to this material
    objectives:
      - "Specific skill students will develop"
      - "Another concrete learning outcome"
      - "Third measurable objective"
  
  # Add more materials as needed
  - title: "Part 2: Advanced Topics"
    description: "Description of second notebook"
    type: "notebook"
    duration: "90 min"
    github_url: "https://github.com/act-cms/your-lesson-repo/blob/main/02-advanced.ipynb"
    colab_url: "https://colab.research.google.com/github/act-cms/your-lesson-repo/blob/main/colab-notebooks/02-advanced.ipynb"
    objectives:
      - "Advanced skill development"
      - "Application of concepts from Part 1"

# LEARNING OBJECTIVES (REQUIRED)
# What molecular science concepts will students learn?
scientific_objectives:
  - "Apply programming to solve chemical problems"
  - "Understand molecular property X through computational analysis"
  - "Interpret results of computational molecular science calculations"

# What computational/programming skills will students develop?
cyberinfrastructure_objectives:
  - "Write and execute Python code in Jupyter notebooks"
  - "Use library X to perform scientific calculations"
  - "Create visualizations of molecular data"
  - "Debug common programming errors"

# PREREQUISITES (REQUIRED)
# What science background do students need?
scientific_prerequisites:
  - "General chemistry"
  - "Basic understanding of molecular structure"

# What programming experience is assumed?
programming_prerequisites:
  - "No prior programming experience required"
  # OR: eg "Basic Python syntax (variables, loops, functions)"

# PLATFORM SUPPORT (REQUIRED)
# List platforms where your materials can be used.
platforms:
  - "Google Colab"
  - "Local Installation"
  - "ChemCompute"

# Which platform do you recommend for most users?
recommended_platform: "Google Colab"

# METADATA (REQUIRED)
# Tags help with searching - use relevant keywords
tags:
  - "python"
  - "molecular-dynamics"
  - "visualization"
  - "quantum-chemistry"  # Use appropriate scientific area tags
