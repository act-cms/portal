# lessons/python-for-nmr.yml
# 
# STARTER TEMPLATE FOR ACT-CMS LESSON PORTAL SUBMISSION
# Replace all placeholder text with your actual lesson information
# Remove any sections that don't apply to your lesson

# BASIC METADATA (REQUIRED)
# Use a clear, descriptive title that includes the main topic
title: "Introduction to Python using NMR data for a first year, graduate level course"

# Brief description for search results (1-2 sentences)
description: |
  Students are introduced to the use of Python to perform cheminformatics, 
  analyze NMR data and generate visualizations for data.

# Longer description for the lesson page (use | for multi-line text)
expanded_description: |
  Four notebooks cover applications chemistry graduate students might need to utilize Python for routine
  analysis of chemical structures using rdkit, processing NMR data for reaction kinetics and nuclear
  spin relaxation data, and to plot data/results. Applicable for organic, inorganic and polymer chemists 
  with little to no programming experience. Students will leave with the ability to load their own data, 
  utilize published Python packages and create plots of the resultant information/data.

  The material was introduced along with general NMR lectures covering introduction to NMR Physics, chemical shifts, 
  spin-spin coupling, relaxation mechanisms, 1D and 2D pulse sequences and processing NMR data. Students are encouraged 
  to work in teams for various questions posed in class as well as structural assignment problems. 
    
# Provide a more detailed description of your lesson here.
# Explain the context, what students will accomplish, and how this
# fits into broader molecular science education.
  
# You can use multiple paragraphs to fully describe the lesson scope
# and learning experience.

# COURSE INFORMATION (REQUIRED)
# Choose ONE: "None", "Beginner", "Intermediate", "Advanced"
programming_skill: "None"
# None: No programming experience. 
# Beginner: Knows variables, conditionals, loops
# Intermediate: Can write their own scripts from scratch
# Advanced: Can write/develop software.

# Examples: "Foundational Module", "Physical Chemistry", "Organic Chemistry", 
# "Inorganic Chemistry", "Analytical Chemistry", "Biochemistry", "Materials Science", "Other"
primary_course: "Foundational Module"

# List other courses where this lesson could be used (optional)
also_for:
  - "Organic Chemistry"
  - "Inorganic Science"
  - "Other"
  
# List all authors
authors: 
  - "Dr. Seth Veenbaas"
  - "Prof. Marc ter Horst"

# Estimated total time for all materials
estimated_time: "4 hours"
   
# Write a description of your module.
# Single notebook, multi-part module, etc?
format: "Multi-Part Materials Module"

# INSTRUCTOR INFORMATION (OPTIONAL)
# Contact email for instructor access requests (optional - will use default if not specified)
instructor_email: "terhorst@unc.edu"
# Note: Instructor materials will be located at: instructor-repo/{lesson-filename}/
# where {lesson-filename} matches this YAML file's name

# INSTRUCTOR DETAILS (OPTIONAL)
# What level of students was this piloted with?
student_level: "Mixed Graduate/Undergraduate"
# "Undergraduate - Second Year"  # e.g., "Graduate", "Undergraduate - First Year", "Mixed Graduate/Undergraduate"
# How many students has this been tested with?
students_piloted: 25  # Number of students
# Free-form notes for instructors
instructor_notes: |
  Additional context for instructors using this lesson:
  
  - This lesson works well when paired with instruction on NMR Spectroscopy for synthetic chemists
  - Take extra time with the first two notebooks for students new to Python programming
  - Homework is designed to show evidence students have gone through the notebooks (not to test skill development)
  
  Timing notes:
  - Part 1 (Day 0 , Python Essentials) is relatively quick and can be covered in a few minutes at the beginning of the course
  - Other parts are covered during a 45 minute class period, one per week
  - Advanced students are encouraged to work with people new to programming
  
  Common student questions:
  - "Why do we need Python for NMR?"
  - "I don't know what some of these error messages mean or how to address them."

# Related lessons that complement this one
related_modules:
  - "computational-chemistry-basics" # ??
# https://education.molssi.org/python-scripting-experimental/basics.html
# https://education.molssi.org/python_scripting_cms/01-introduction/index.html

# REPOSITORY URLS (REQUIRED)
# Link to the repository containing your public material
public_repo_url: "https://github.com/act-cms/python-for-nmr"

# MATERIALS SECTION (REQUIRED)
# List each notebook/material in logical order
materials:
  - title: "Part 1: Python essentials"
    description: "Brief description of what this notebook covers"
    type: "notebook"  # Usually "notebook", could be "slides", "dataset", etc.
    duration: "30 minutes"
    
    # REQUIRED: Include at least one URL (preferably both)
    # Direct link to notebook file on GitHub
    # github_url: "https://github.com/act-cms/your-lesson-repo/blob/main/01-intro.ipynb"
    github_url: "https://github.com/act-cms/python-for-nmr/blob/main/0-python-essentials/Day0_python_essentials.ipynb"
    
    # Google Colab launch link (recommended for accessibility)
    # colab_url: "https://colab.research.google.com/github/act-cms/your-lesson-repo/blob/main/colab-notebooks/01-intro.ipynb"
    
    # Learning objectives specific to this material
    objectives:
      - "Open a Jupyter notebook"
      - "Python logic statements, for loops, Python lists"

  # SECOND notebook
  - title: "Part 2: Introduction to cheminformatics"
    description: "Using SMILES strings to work with rdkit"
    type: "notebook"
    duration: "50 min"
  # github_url: "https://github.com/act-cms/your-lesson-repo/blob/main/02-advanced.ipynb"
    github_url: "https://github.com/act-cms/python-for-nmr/blob/main/1-intro-to-cheminformatics/Day1_rdkit.ipynb"
  # colab_url: "https://colab.research.google.com/github/act-cms/your-lesson-repo/blob/main/colab-notebooks/02-advanced.ipynb"
    objectives:
      - "Use SMILES strings"
      - "Learn how to import packages/libraries."
      - "Use rdkit library to draw and characterize molecules."
      - "Learn how to get help with tab complete and the help() function."

  # THIRD notebook
  - title: "Part 3: NMR Kinetics"
    description: "Using Python to determine a rate constant from integrals of NMR data"
    type: "notebook"
    duration: "50 min"
  # github_url: "https://github.com/act-cms/your-lesson-repo/blob/main/02-advanced.ipynb"
    github_url: "https://github.com/act-cms/python-for-nmr/blob/main/2-nmr-kinetics/Day2_NMR_kinetics.ipynb"
  # colab_url: "https://colab.research.google.com/github/act-cms/your-lesson-repo/blob/main/colab-notebooks/02-advanced.ipynb"
    objectives:
      - "Use pandas and scipy to load and analyze NMR kinetics data."
      - "Determine the reaction order and rate constant (k) from NMR reaction monitoring data."

  # FOURTH notebook
  - title: "Part 4: NMR Spin Relaxation"
    description: "Using Python to determine a nuclear spin relaxation times (T1) from integrals of inversion recovery data"
    type: "notebook"
    duration: "50 min"
  # github_url: "https://github.com/act-cms/your-lesson-repo/blob/main/02-advanced.ipynb"
    github_url: "https://github.com/act-cms/python-for-nmr/blob/main/2-nmr-kinetics/Day2_NMR_kinetics.ipynb"
  # colab_url: "https://colab.research.google.com/github/act-cms/your-lesson-repo/blob/main/colab-notebooks/02-advanced.ipynb"
    objectives:
      - "Use pandas and scipy to load and analyze NMR kinetics data."
      - "Determine the reaction order and rate constant (k) from NMR reaction monitoring data."

# LEARNING OBJECTIVES (REQUIRED)
# What molecular science concepts will students learn?
scientific_objectives:
  - "Apply Python programming to analyze NMR data"
  - "Determine reaction rates from NMR data"
  - "Determine nuclear spin-lattice relaxation from NMR data"

# What computational/programming skills will students develop?
cyberinfrastructure_objectives:
  - "Use basic Python programming to work with a molecular database"
  - "Write and execute Python code in Jupyter notebooks"
  - "Use Python packages to fit and display data"
  - "Create visualizations of NMR data"
  - "Debug common programming errors"

# PREREQUISITES (REQUIRED)
# What science background do students need?
scientific_prerequisites:
  - "General chemistry"
  - "Organic Chemistry"
  - "Understanding of molecular structure"
  - "Experience with proton, one-dimensional NMR spectra"

# What programming experience is assumed?
programming_prerequisites:
  - "No prior programming experience required"
  # OR: eg "Basic Python syntax (variables, loops, functions)"

# PLATFORM SUPPORT (REQUIRED)
# List platforms where your materials can be used.
platforms:
  - "ChemCompute"
  - "Local Installation"
  
# Which platform do you recommend for most users?
recommended_platform: "ChemCompute"

# METADATA (REQUIRED)
# Tags help with searching - use relevant keywords
tags:
  - "python"
  - "NMR"
  - "NMR Spectroscopy"
  - "visualization"
  - "reaction rate"   # ??
  # Use appropriate scientific area tags
